// SPDX-License-Identifier: unlicensed

pragma solidity 0.8.17;

contract DegiskenMapping {

    mapping(address => uint) public bakiye;
    mapping(address => bool) public ekleme;
    address[] public anahtar;

    function set (address _anahtar, uint _miktar) external {
        bakiye[_anahtar] = _miktar;

        if (!ekleme[_anahtar]) {
            ekleme[_anahtar] = true;
            anahtar.push(_anahtar);
        }
    }

    function Buyukluk () external view returns (uint) {
        return anahtar.length;
    }

    function Ilk () external view returns (uint) {
        return bakiye[anahtar[0]];
    }

    function Son () external view returns (uint) {
        return bakiye[anahtar[anahtar.length - 1]];
    }

    function get (uint _i) external view returns (uint) {
        return bakiye[anahtar[_i]];
    }
}
