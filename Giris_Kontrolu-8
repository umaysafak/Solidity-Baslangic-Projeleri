// SPDX-License-Identifier: unlicensed

pragma solidity 0.8.17;

contract Giris_Kontrolu {

    event RolVermek(bytes32 indexed rol, address hesap);
    event RolIptal(bytes32 indexed rol, address hesap);


    mapping (bytes32 => mapping (address => bool)) public roller;

    bytes32 private constant ADMIN = keccak256(abi.encodePacked("ADMIN"));
    bytes32 private constant KULLANICI = keccak256(abi.encodePacked("KULLANICI"));

    modifier SadeceRol(bytes32 _rol){
        require(roller[_rol][msg.sender], "yetkiniz yok");
        _;
    }

    constructor () {
        _rolVermek(ADMIN, msg.sender);
    }

    function _rolVermek (bytes32 _rol, address _hesap) internal {
        roller[_rol][_hesap] = true ;
        emit RolIptal(_rol, _hesap);
    } 

    function rolVermek(bytes32 _rol, address _hesap) external SadeceRol(ADMIN) {
        _rolVermek(_rol, _hesap);
    }

    function rolIptal(bytes32 _rol, address _hesap) external SadeceRol(ADMIN) {
        roller[_rol][_hesap] = false;
        emit RolIptal(_rol, _hesap);
    }

}
